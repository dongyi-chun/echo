plugins {
    id 'kotlin-kapt'
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
}

def versions = [
        kotlin: "1.8.10",
        coreKtx: "1.5.6",
        appCompat: "1.3.1",
        junit: "4.13.2",
        mockk: "1.13.4",
        compose: "1.4.0",
        retroFit: "2.9.0",
        coroutine: "1.5.0"
]

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    namespace 'com.whitecrow.echo'
    compileSdk 33

    defaultConfig {
        applicationId "com.whitecrow.echo"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0.0"

        buildConfigField "String", "API_KEY", localProperties['apiKey']

        testInstrumentationRunner "com.whitecrow.echo.util.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.3"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE.md', 'META-INF/LICENSE-notice.md', 'META-INF/gradle/incremental.annotation.processors']
        }
    }


    testOptions {
        packagingOptions {
            jniLibs {
                // To prevent MockK error: https://github.com/mockk/mockk/issues/297#issuecomment-901924678
                useLegacyPackaging = true
            }
        }
        unitTests{
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    testNamespace 'com.whitecrow.echo.test'
}

dependencies {

    def composeBom = platform('androidx.compose:compose-bom:2023.04.01')
    implementation composeBom
    androidTestImplementation composeBom

    // Jetpack
    implementation "androidx.core:core-ktx:${versions.coreKtx}"
    implementation "androidx.activity:activity-ktx:${versions.coreKtx}"
    implementation "androidx.fragment:fragment-ktx:${versions.coreKtx}"

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'

    // AppCompat
    implementation "androidx.appcompat:appcompat:${versions.appCompat}"

    // Material Design
    implementation 'com.google.android.material:material:1.8.0'

    // ConstraintLayout
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Compose
    implementation "androidx.compose.ui:ui:${versions.compose}"
    implementation "androidx.compose.ui:ui-tooling:${versions.compose}"
    implementation "androidx.compose.ui:ui-tooling-preview:${versions.compose}"
    implementation "androidx.compose.material:material:${versions.compose}"
    implementation "androidx.compose.runtime:runtime-livedata:${versions.compose}"

    implementation "androidx.activity:activity-compose:1.7.1"
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "com.google.accompanist:accompanist-permissions:0.30.1"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${versions.retroFit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retroFit}"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutine}"

    // Hilt
    implementation "com.google.dagger:hilt-android:2.45"
    kapt "com.google.dagger:hilt-compiler:2.45"

    // UnitTest dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:${versions.mockk}"
    testImplementation "org.robolectric:robolectric:4.9.2"
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'androidx.test:core-ktx:1.5.0'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.5'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutine}"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.3"
    testImplementation "com.google.dagger:hilt-android-testing:2.45"
    kaptTest "com.google.dagger:hilt-compiler:2.45"

    // IntegrationTest dependencies
    androidTestImplementation "io.mockk:mockk-android:${versions.mockk}"
    androidTestImplementation "androidx.fragment:fragment-testing:1.5.6"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:${versions.compose}"
    androidTestImplementation "com.google.dagger:hilt-android-testing:2.45"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:2.45"
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}